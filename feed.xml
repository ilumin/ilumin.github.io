<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en, th"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ilumin.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ilumin.github.io/" rel="alternate" type="text/html" hreflang="en, th"/><updated>2024-06-21T02:46:48+00:00</updated><id>https://ilumin.github.io/feed.xml</id><title type="html">Hi, I‚Äôm Lumin. üôá‚Äç‚ôÇÔ∏è</title><subtitle>A simple blog for Lumin. </subtitle><entry><title type="html">Software is Eating the World</title><link href="https://ilumin.github.io/blog/2024/software-is-eating-the-world/" rel="alternate" type="text/html" title="Software is Eating the World"/><published>2024-06-21T00:00:00+00:00</published><updated>2024-06-21T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/software-is-eating-the-world</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/software-is-eating-the-world/"><![CDATA[<blockquote> <p>Software is eating the world.</p> </blockquote> <p>‡πÄ‡∏Ñ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô software ‡πÑ‡∏õ‡∏´‡∏°‡∏î ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡∏Å‡πá‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏°‡∏±‡∏ô ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡πÇ‡∏•‡∏Å</p> <p>‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏ß‡πà‡∏≤ software ‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏Ñ‡∏ô‡∏Ñ‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô (‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡πÑ‡∏°‡πà‡∏î‡∏µ) ‡∏Å‡πá‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡πÑ‡∏î‡πâ‡∏à‡∏ô‡∏´‡∏°‡∏î‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏±‡∏ô</p>]]></content><author><name></name></author><category term="etc"/><summary type="html"><![CDATA[It might eats you too]]></summary></entry><entry><title type="html">What‚Äôs End-to-End Testing (E2E testing)</title><link href="https://ilumin.github.io/blog/2024/whats-e2e-test/" rel="alternate" type="text/html" title="What‚Äôs End-to-End Testing (E2E testing)"/><published>2024-06-14T00:00:00+00:00</published><updated>2024-06-14T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/whats-e2e-test</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/whats-e2e-test/"><![CDATA[<blockquote> <p>End-to-end testing is a software methodology that assesses the operation of an application from beginning to end, simulating real-world user scenarios. It involves testing the entire software system, including all its components, integrations, and interfaces, to ensure that it functions as expected under realistic conditions. ‚Äì ChatGPT</p> </blockquote> <p>AI ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£ test software ‡∏à‡∏≤‡∏Å<strong>‡∏ï‡πâ‡∏ô‡∏à‡∏ô‡∏à‡∏ö</strong> (from beginning to end) ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏Ç‡∏≠‡∏á user ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ó‡∏™‡∏£‡∏ß‡∏°‡πÑ‡∏õ‡∏ó‡∏±‡πâ‡∏á components, integrations, ‡πÅ‡∏•‡∏∞ interface (‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á UI)</p> <p>‡∏à‡∏≤‡∏Å‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏î‡∏±‡∏á‡∏Å‡∏•‡πà‡∏≤‡∏ß ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡∏°‡∏µ</p> <ul> <li>‡πÄ‡∏ó‡∏™‡πÇ‡∏î‡∏¢‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏Ç‡∏≠‡∏á user</li> <li>‡πÄ‡∏ó‡∏™‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö ‡∏Ñ‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏≤‡∏£‡∏±‡∏ô</li> </ul> <h2 id="‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡πÅ‡∏£‡∏Å-‡πÄ‡∏ó‡∏™‡πÇ‡∏î‡∏¢‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏Ç‡∏≠‡∏á-user">‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡πÅ‡∏£‡∏Å ‚Äú‡πÄ‡∏ó‡∏™‡πÇ‡∏î‡∏¢‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÜ‡∏Ç‡∏≠‡∏á user‚Äù</h2> <p>‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ó‡∏™‡∏ï‡∏≤‡∏° user scenario ‡∏´‡∏£‡∏∑‡∏≠ use case ‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á</p> <p>‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏°‡∏±‡∏ô‡∏à‡∏∂‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏Ñ‡πà‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö ‡πÅ‡∏•‡∏∞‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏à‡∏ô‡∏à‡∏ö user scenario ‡∏ã‡∏∂‡πà‡∏á‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞ happy case ‡πÅ‡∏•‡∏∞ alternate case ‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏•‡∏∞‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à</p> <h2 id="‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á-‡πÄ‡∏ó‡∏™‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö-‡∏Ñ‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏≤‡∏£‡∏±‡∏ô">‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á ‚Äú‡πÄ‡∏ó‡∏™‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö ‡∏Ñ‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏≤‡∏£‡∏±‡∏ô‚Äù</h2> <p>‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏¢‡∏¥‡∏ö‡∏°‡∏≤‡∏ñ‡∏Å‡πÄ‡∏ñ‡∏µ‡∏¢‡∏á</p> <p>‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡πà‡∏≠‡∏°‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ß‡πà‡∏≤‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏°</p> <p>‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà</p> <h3 id="1-‡∏ó‡∏µ‡∏°-fullstack">1. ‡∏ó‡∏µ‡∏° fullstack</h3> <p>‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö end-to-end ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏ô‡∏£‡∏±‡∏ô‡πÄ‡∏ó‡∏™‡πÇ‡∏î‡∏¢‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö</p> <p>‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ó‡∏µ‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏´‡∏°‡∏î‡∏ó‡∏±‡πâ‡∏á frontend ‡πÅ‡∏•‡∏∞ backend</p> <p>‡∏ó‡∏±‡πâ‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏ô‡∏µ‡πâ ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏á‡∏≤‡∏ô ‡∏ñ‡πâ‡∏≤‡πÅ‡∏ö‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Ñ‡∏∑‡∏≠ 1 ‡∏ó‡∏µ‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÉ‡∏ô 1 epic/feature/subdomain ‡∏Å‡πá‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥ E2E ‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∞‡πÑ‡∏£</p> <p>‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏µ‡πâ‡∏¢‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ ‡πÉ‡∏´‡πâ epic ‡∏´‡∏£‡∏∑‡∏≠ feature ‡∏´‡∏ô‡∏∂‡πà‡∏á‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡∏°‡∏°‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô ‡πÉ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô horizontal ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ E2E ‡∏Å‡πá‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ô‡∏∂‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡∏°‡∏±‡∏ô‡∏ã‡πâ‡∏≠‡∏ô‡∏Å‡∏±‡∏ô</p> <h3 id="2-‡∏ó‡∏µ‡∏°-frontend">2. ‡∏ó‡∏µ‡∏° frontend</h3> <p>‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö end-to-end ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô frontend app ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÅ‡∏ï‡πà‡πÉ‡∏ä‡πâ mock API ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö</p> <p>‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏£‡∏ì‡∏µ‡πÅ‡∏£‡∏Å ‡∏Å‡πá‡∏ó‡∏µ‡∏°‡∏ó‡∏≥‡πÅ‡∏Ñ‡πà frontend ‡∏ô‡∏µ‡πà‡∏ô‡∏≤</p> <p>‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î contract ‡∏Å‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡πÅ‡∏£‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ API ‡∏≠‡∏∞‡πÑ‡∏£ ‡∏°‡∏µ request/response ‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô</p> <h3 id="3-‡∏ó‡∏µ‡∏°-backend">3. ‡∏ó‡∏µ‡∏° backend</h3> <p>‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö end-to-end ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏™‡∏°‡πÄ‡∏´‡∏ï‡∏∏‡∏™‡∏°‡∏ú‡∏•‡∏ñ‡πâ‡∏≤‡πÄ‡∏£‡∏≤‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô backend app ‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡∏ã‡∏∂‡πà‡∏á‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ API testing</p> <hr/> <p>‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£ ‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡∏•‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏µ‡∏° ‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏ó‡∏≥‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏≤‡∏£‡∏±‡∏ô‡∏ï‡∏µ‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á software ‡πÄ‡∏£‡∏≤‡πÑ‡∏î‡πâ</p> <p>‡∏Å‡πá‡πÄ‡∏≠‡∏≤‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏û‡∏ß‡∏Å‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÄ‡∏ñ‡∏µ‡∏¢‡∏á‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏±‡∏ö ü§£</p>]]></content><author><name></name></author><category term="etc"/><summary type="html"><![CDATA[E2E test ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£]]></summary></entry><entry><title type="html">Switch Git Submodule from HTTPS to SSH</title><link href="https://ilumin.github.io/blog/2024/switch-gitsubmodule-from-https-to-ssh/" rel="alternate" type="text/html" title="Switch Git Submodule from HTTPS to SSH"/><published>2024-06-12T00:00:00+00:00</published><updated>2024-06-12T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/switch-gitsubmodule-from-https-to-ssh</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/switch-gitsubmodule-from-https-to-ssh/"><![CDATA[<p>I was assigned to review code in the project and found that the team use Git Submodule with HTTPS, which is require them to enter username and password every time they want to install the project.</p> <p>It might be good for them, I guess. But, it‚Äôs not good for me. I‚Äôm a lazy bastard and I hate to remember password.</p> <p>So, we should switch Git Submodule from HTTPS to SSH</p> <p>The current Git Submodule</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> .gitmodules <span class="c"># Why we call it "Git submodule", when the config is "Gitmodues"? </span>
<span class="o">[</span>submodule <span class="s2">"common"</span><span class="o">]</span>
  path <span class="o">=</span> common
  urk <span class="o">=</span> https://githost/project-repo.git
</code></pre></div></div> <p>This file tells that we can pull source code from <code class="language-plaintext highlighter-rouge">https://githost/project-repo.git</code> into path <code class="language-plaintext highlighter-rouge">common/</code> with this command</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git submodule update
</code></pre></div></div> <p>But I won‚Äôt do that because the url is HTTPS, which require me to login with username and password. I don‚Äôt want to do that since I‚Äôve SSH key.</p> <p>So, I just have to change the url into SSH</p> <div class="language-dot highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span><span class="nv">submodule</span> <span class="s2">"common"</span><span class="o">]</span>
  <span class="n">path</span> <span class="p">=</span> <span class="nv">common</span>
  <span class="n">urk</span> <span class="p">=</span> <span class="err">../</span><span class="nv">project</span><span class="err">-</span><span class="nv">repo</span><span class="err">.</span><span class="nv">git</span>
</code></pre></div></div> <p>Then run</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git submodule <span class="nb">sync 
</span>git submodule update

<span class="c"># clone submodule into common/</span>
</code></pre></div></div> <p>Now Git submodule will clone with your current access or in my case clone without asking for username and password.</p>]]></content><author><name></name></author><category term="etc"/><summary type="html"><![CDATA[I don't know who use HTTPS for git submodule and I hate to enter username password]]></summary></entry><entry><title type="html">Type of Subdomain in DDD</title><link href="https://ilumin.github.io/blog/2024/type-of-subdomain-in-ddd/" rel="alternate" type="text/html" title="Type of Subdomain in DDD"/><published>2024-06-11T00:00:00+00:00</published><updated>2024-06-11T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/type-of-subdomain-in-ddd</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/type-of-subdomain-in-ddd/"><![CDATA[<p>‡πÉ‡∏ô DDD ‡∏ô‡∏¥‡∏¢‡∏≤‡∏° subdomain ‡πÑ‡∏ß‡πâ 3 ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ñ‡∏∑‡∏≠</p> <ol> <li><strong>Core Subdomain</strong><br/> ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô code subdomain ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏î‡πÑ‡∏õ ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡∏Ñ‡∏π‡πà‡πÅ‡∏Ç‡πà‡∏á</li> <li><strong>Generic Subdomain</strong><br/> ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏û‡∏≠‡πÜ‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö code subdomain (‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤) ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏π‡πâ‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏±‡∏ö ‡πÄ‡∏ä‡πà‡∏ô Accounting, HR</li> <li><strong>Supporting Subdomain</strong><br/> ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡πÉ‡∏´‡πâ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏î‡∏µ ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡πÅ‡∏•‡∏∞‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ‡∏ß‡πà‡∏≤‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢‡πÑ‡∏õ ‡∏Å‡πá‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡πÄ‡∏à‡πä‡∏á ‡πÅ‡∏Ñ‡πà‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏•‡∏≥‡∏ö‡∏≤‡∏Å</li> </ol> <p>‡πÉ‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£</p> <ul> <li>‡πÄ‡∏≠‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÑ‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á core subdomain ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô‡∏™‡∏π‡∏á ‡πÅ‡∏•‡∏∞‡∏°‡∏±‡∏Å‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏ö‡πà‡∏≠‡∏¢‡πÅ‡∏•‡∏∞‡πÑ‡∏ß</li> <li>‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏ó‡∏≥ generic subdomain ‡πÄ‡∏≠‡∏á ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á value ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏°‡∏≤‡∏Å‡∏ô‡∏±‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏∏‡∏Å‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÜ‡∏Å‡∏±‡∏ô ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤</li> <li>‡πÉ‡∏´‡πâ supporting subdomain ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡∏ù‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πå</li> </ul> <p>‡πÉ‡∏ô‡∏°‡∏∏‡∏°‡∏°‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ß‡∏≤‡∏á architecture ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ subdomain</p> <ul> <li>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö core subdomain ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ architecture ‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô ‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£ maintenance ‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏° feature ‡πÄ‡∏ä‡πà‡∏ô hexagonal architecture ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ test coverage ‡πÉ‡∏ô‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏π‡∏á</li> <li>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö generic subdomain ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å software ‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ integrate ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢</li> <li>‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö supporting subdomain ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ architecture ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡πÜ ‡πÄ‡∏ô‡πâ‡∏ô‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</li> </ul>]]></content><author><name></name></author><category term="ddd"/><summary type="html"><![CDATA[‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á Subdomain ‡πÉ‡∏ô DDD]]></summary></entry><entry><title type="html">Document should complement code</title><link href="https://ilumin.github.io/blog/2024/document-should-complement-code/" rel="alternate" type="text/html" title="Document should complement code"/><published>2024-06-10T00:00:00+00:00</published><updated>2024-06-10T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/document-should-complement-code</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/document-should-complement-code/"><![CDATA[<p>‚ÄúDocument should complement code‚Äù ‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤ document ‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à code ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢</p> <p>‡πÅ‡∏•‡πâ‡∏ß document ‡∏°‡∏±‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÅ‡∏ö‡∏ö‡πÑ‡∏´‡∏ô ‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏™‡πà‡∏á‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à code?</p> <ul> <li>‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡πÑ‡∏° code ‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ö‡∏≤‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏õ ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô‡πÉ‡∏à ‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Ç‡∏≠‡∏á code ‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô</li> <li>‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà code ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏¢‡∏≤‡∏Å document ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ä‡πà‡∏ß‡∏¢‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ</li> <li>‡∏ö‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡∏£‡∏±‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£ ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏•‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞ effort ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ onboarding</li> <li>‡∏ö‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏ô‡∏±‡πâ‡∏ô‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô (‡∏ñ‡πâ‡∏≤‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ ‡∏Å‡πá‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞‡πÑ‡∏á)</li> </ul>]]></content><author><name></name></author><category term="ddd"/><summary type="html"><![CDATA[What does it mean "document should complement code"?]]></summary></entry><entry><title type="html">Note on Rust match for option</title><link href="https://ilumin.github.io/blog/2024/match-option/" rel="alternate" type="text/html" title="Note on Rust match for option"/><published>2024-05-31T00:00:00+00:00</published><updated>2024-05-31T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/match-option</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/match-option/"><![CDATA[<p>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">match</code> ‡∏Å‡∏±‡∏ö <code class="language-plaintext highlighter-rouge">option</code></p> <div class="language-rs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">use</span> <span class="nn">std</span><span class="p">::</span><span class="nn">io</span><span class="p">::</span><span class="n">stdin</span><span class="p">;</span>

<span class="k">struct</span> <span class="n">Visitor</span> <span class="p">{</span>
    <span class="n">name</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
    <span class="n">greeting</span><span class="p">:</span> <span class="nb">String</span><span class="p">,</span>
<span class="p">}</span>

<span class="k">impl</span> <span class="n">Visitor</span> <span class="p">{</span>
    <span class="k">fn</span> <span class="nf">new</span><span class="p">(</span><span class="n">name</span><span class="p">:</span> <span class="o">&amp;</span><span class="nb">str</span><span class="p">,</span> <span class="n">greeting</span><span class="p">:</span> <span class="o">&amp;</span><span class="nb">str</span><span class="p">)</span> <span class="k">-&gt;</span> <span class="k">Self</span> <span class="p">{</span>
        <span class="k">Self</span> <span class="p">{</span>
            <span class="n">name</span><span class="p">:</span> <span class="n">name</span><span class="nf">.to_lowercase</span><span class="p">(),</span>
            <span class="n">greeting</span><span class="p">:</span> <span class="n">greeting</span><span class="nf">.to_string</span><span class="p">(),</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">fn</span> <span class="nf">greet_visitor</span><span class="p">(</span><span class="o">&amp;</span><span class="k">self</span><span class="p">)</span> <span class="p">{</span>
        <span class="nd">println!</span><span class="p">(</span><span class="s">"{}"</span><span class="p">,</span> <span class="k">self</span><span class="py">.greeting</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nd">println!</span><span class="p">(</span><span class="s">"Hello, what's your name?"</span><span class="p">);</span>

    <span class="k">let</span> <span class="n">name</span> <span class="o">=</span> <span class="nf">what_is_your_name</span><span class="p">();</span>
    <span class="k">let</span> <span class="n">visitor_list</span> <span class="o">=</span> <span class="p">[</span>
        <span class="nn">Visitor</span><span class="p">::</span><span class="nf">new</span><span class="p">(</span><span class="s">"bert"</span><span class="p">,</span> <span class="s">"Hello Bert, enjoy your treehouse."</span><span class="p">),</span>
        <span class="nn">Visitor</span><span class="p">::</span><span class="nf">new</span><span class="p">(</span><span class="s">"steve"</span><span class="p">,</span> <span class="s">"Hi Steve. Your milk is in the fridge."</span><span class="p">),</span>
        <span class="nn">Visitor</span><span class="p">::</span><span class="nf">new</span><span class="p">(</span><span class="s">"fred"</span><span class="p">,</span> <span class="s">"Wow, who invited Fred?"</span><span class="p">),</span>
    <span class="p">];</span>

    <span class="k">let</span> <span class="n">known_visitor</span> <span class="o">=</span> <span class="n">visitor_list</span><span class="nf">.iter</span><span class="p">()</span><span class="nf">.find</span><span class="p">(|</span><span class="n">visitor</span><span class="p">|</span> <span class="n">visitor</span><span class="py">.name</span> <span class="o">==</span> <span class="n">name</span><span class="p">);</span>

    <span class="k">match</span> <span class="n">known_visitor</span> <span class="p">{</span>
        <span class="nf">Some</span><span class="p">(</span><span class="n">visitor</span><span class="p">)</span> <span class="k">=&gt;</span> <span class="n">visitor</span><span class="nf">.greet_visitor</span><span class="p">(),</span>
        <span class="nb">None</span> <span class="k">=&gt;</span> <span class="nd">println!</span><span class="p">(</span><span class="s">"You are not on the visitor list. Please leave."</span><span class="p">),</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">fn</span> <span class="nf">what_is_your_name</span><span class="p">()</span> <span class="k">-&gt;</span> <span class="nb">String</span> <span class="p">{</span>
    <span class="k">let</span> <span class="k">mut</span> <span class="n">your_name</span> <span class="o">=</span> <span class="nn">String</span><span class="p">::</span><span class="nf">new</span><span class="p">();</span>

    <span class="nf">stdin</span><span class="p">()</span>
        <span class="nf">.read_line</span><span class="p">(</span><span class="o">&amp;</span><span class="k">mut</span> <span class="n">your_name</span><span class="p">)</span>
        <span class="nf">.expect</span><span class="p">(</span><span class="s">"Failed to read line"</span><span class="p">);</span>

    <span class="n">your_name</span><span class="nf">.trim</span><span class="p">()</span><span class="nf">.to_lowercase</span><span class="p">()</span>
<span class="p">}</span>
</code></pre></div></div> <p>‡πÇ‡∏Ñ‡πâ‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡πÄ‡∏õ‡πá‡∏ô ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà refactor ‡∏à‡∏≤‡∏Å [[2024-05-29-basic-rust]] ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏≠‡∏≤ input ‡∏°‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏•‡∏¥‡∏™‡πÑ‡∏´‡∏°</p> <p>‡∏•‡∏¥‡∏™‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏™‡∏Ç‡∏≠‡∏á <code class="language-plaintext highlighter-rouge">struct Visitor</code></p> <p>‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á Rust, struct ‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô type ‡∏´‡∏£‡∏∑‡∏≠ interface ‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡∏Ç‡∏≠‡∏á Javascript ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏° behavior ‡πÉ‡∏´‡πâ‡∏°‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ <code class="language-plaintext highlighter-rouge">impl Visitor</code></p> <ul> <li><code class="language-plaintext highlighter-rouge">struct Visitor</code> ‡∏°‡∏µ <code class="language-plaintext highlighter-rouge">name</code> ‡πÅ‡∏•‡∏∞ <code class="language-plaintext highlighter-rouge">greeting</code> ‡πÄ‡∏õ‡πá‡∏ô property (‡πÄ‡∏≠‡πä‡∏∞ ‡πÄ‡∏Ñ‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ property ‡πÑ‡∏´‡∏°‡∏ô‡∏∞)</li> <li>‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏≤ <code class="language-plaintext highlighter-rouge">impl Visitor</code> ‡πÉ‡∏´‡πâ‡∏°‡∏µ <code class="language-plaintext highlighter-rouge">new()</code> ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏™‡∏°‡∏∑‡∏≠‡∏ô <code class="language-plaintext highlighter-rouge">construct</code> ‡πÅ‡∏•‡∏∞ <code class="language-plaintext highlighter-rouge">fn greet_visitor()</code></li> </ul> <p>‡∏ó‡∏µ‡∏ô‡∏µ‡πâ‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ input ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏ô‡∏µ‡πà‡∏¢‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö <code class="language-plaintext highlighter-rouge">visitor_list</code> ‡πÑ‡∏´‡∏° ‡πÄ‡∏£‡∏≤‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏´‡∏•‡∏≤‡∏¢‡πÅ‡∏ö‡∏ö ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">for...in</code> ‡∏Å‡πá‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">iter</code> (iterator) ‡∏Å‡πá‡πÑ‡∏î‡πâ</p> <p>‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">for...in</code> ‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡πÑ‡∏°‡πà‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏ó‡πà‡∏´‡πå ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏°‡∏≤‡∏Ñ‡∏≠‡∏¢‡πÄ‡∏ä‡πá‡∏Ñ ‡πÅ‡∏•‡∏∞‡∏ó‡∏≥ <code class="language-plaintext highlighter-rouge">if...else</code> ‡πÉ‡∏ô‡∏•‡∏π‡∏õ‡∏î‡πâ‡∏ß‡∏¢</p> <p>‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡∏à‡∏∞‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">iter</code> ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤ ‡∏ã‡∏∂‡πà‡∏á iter ‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ô‡∏±‡πà‡∏ô‡πÅ‡∏´‡∏•‡∏∞ ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">find</code> ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ö Javascript ‡∏Ñ‡∏∑‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏´‡∏≤ item ‡∏ó‡∏µ‡πà‡∏°‡∏µ pattern ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î</p> <p>‡πÇ‡∏î‡∏¢ pattern ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡πÄ‡∏ô‡∏µ‡πà‡∏¢‡∏à‡∏∞‡πÉ‡∏ä‡πâ closure function <code class="language-plaintext highlighter-rouge">|visitor| visitor.name == name</code> ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô Javascript ‡∏°‡∏±‡∏ô‡∏Å‡πá‡∏Ñ‡∏∑‡∏≠ <code class="language-plaintext highlighter-rouge">(visitor) =&gt; visitor.name === name</code> ‡∏ô‡∏±‡πà‡∏ô‡πÄ‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å <code class="language-plaintext highlighter-rouge">find</code> ‡∏Å‡πá‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÉ‡∏™‡πà‡∏•‡∏á‡πÑ‡∏õ‡πÉ‡∏ô <code class="language-plaintext highlighter-rouge">known_visitor</code></p> <p>‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡∏£‡∏á‡∏ó‡∏µ‡πà <code class="language-plaintext highlighter-rouge">find</code> ‡∏à‡∏∞‡∏£‡∏µ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÄ‡∏õ‡πá‡∏ô <code class="language-plaintext highlighter-rouge">Option&lt;T&gt;</code> ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ß‡πà‡∏≤ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏£‡∏µ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÄ‡∏õ‡πá‡∏ô 2 ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏∑‡∏≠</p> <ul> <li><code class="language-plaintext highlighter-rouge">Some&lt;T&gt;</code> ‡∏´‡∏≤‡πÄ‡∏à‡∏≠</li> <li><code class="language-plaintext highlighter-rouge">None</code> ‡∏´‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠</li> </ul> <p>‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å Javascript ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏µ‡πÄ‡∏ó‡∏¥‡∏£‡πå‡∏ô‡πÄ‡∏õ‡πá‡∏ô type ‡∏Ç‡∏≠‡∏á item ‡∏´‡∏£‡∏∑‡∏≠ undefined (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô null)</p> <p>‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö <code class="language-plaintext highlighter-rouge">known_visitor</code> ‡πÉ‡∏ô Rust ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">if...else</code> ‡∏´‡∏£‡∏∑‡∏≠ <code class="language-plaintext highlighter-rouge">match</code> ‡∏Å‡πá‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">match</code> ‡∏à‡∏∞‡∏î‡∏π‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡∏Å‡∏ß‡πà‡∏≤ ‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏•‡∏¢‡πÄ‡∏õ‡πá‡∏ô</p> <div class="language-rs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">match</span> <span class="n">known_visitor</span> <span class="p">{</span>
    <span class="nf">Some</span><span class="p">(</span><span class="n">visitor</span><span class="p">)</span> <span class="k">=&gt;</span> <span class="n">visitor</span><span class="nf">.greet_visitor</span><span class="p">(),</span>
    <span class="nb">None</span> <span class="k">=&gt;</span> <span class="nd">println!</span><span class="p">(</span><span class="s">"You are not on the visitor list. Please leave."</span><span class="p">),</span>
<span class="p">}</span>
</code></pre></div></div> <p>‡∏ã‡∏∂‡πà‡∏á‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô <code class="language-plaintext highlighter-rouge">switch...case</code> ‡πÅ‡∏ï‡πà‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏°‡∏µ <code class="language-plaintext highlighter-rouge">match</code> ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ß‡πà‡∏≤ pattern matching ‡∏Ñ‡∏∑‡∏≠ ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô dynamic ‡∏î‡πâ‡∏ß‡∏¢ pattern ‡πÑ‡∏î‡πâ</p> <ul> <li><code class="language-plaintext highlighter-rouge">Some(visitor)</code> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ <code class="language-plaintext highlighter-rouge">known_visitor</code> ‡∏°‡∏µ pattern ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô <code class="language-plaintext highlighter-rouge">Some(visitor)</code> ‡πÑ‡∏´‡∏° ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡πá‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠ ‡πÇ‡∏î‡∏¢‡πÄ‡∏≠‡∏≤ <code class="language-plaintext highlighter-rouge">visitor</code> ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</li> <li><code class="language-plaintext highlighter-rouge">None</code> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ <code class="language-plaintext highlighter-rouge">known_visitor</code> ‡∏°‡∏µ pattern ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô <code class="language-plaintext highlighter-rouge">None</code> ‡πÑ‡∏´‡∏°</li> </ul> <p>‡∏ã‡∏∂‡πà‡∏á‡πÉ‡∏ô <code class="language-plaintext highlighter-rouge">switch...case</code> ‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏Å‡∏±‡∏ö static value ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß</p>]]></content><author><name></name></author><category term="etc"/><category term="rust"/><summary type="html"><![CDATA[We better use match, instead of if...else]]></summary></entry><entry><title type="html">Rust str and String</title><link href="https://ilumin.github.io/blog/2024/rust-str-string/" rel="alternate" type="text/html" title="Rust str and String"/><published>2024-05-30T00:00:00+00:00</published><updated>2024-05-30T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/rust-str-string</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/rust-str-string/"><![CDATA[<p>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à type str ‡πÅ‡∏•‡∏∞ String ‡∏Ç‡∏≠‡∏á Rust</p> <blockquote> <p>Rust has two types of strings, which can be a source of confusion for new Rust programmers. The first type is <code class="language-plaintext highlighter-rouge">str</code>. These types are generally used as string <em>literals</em>, which are strings entered in the source code and generally unchanging. The second type is the <code class="language-plaintext highlighter-rouge">String</code>. Strings are dynamic because they store a location, length, and capacity. You can append Strings and edit them.</p> </blockquote> <ul> <li><code class="language-plaintext highlighter-rouge">str</code> ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á</li> <li><code class="language-plaintext highlighter-rouge">String</code> ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏•‡∏≠‡∏î</li> </ul> <p>‡∏î‡∏±‡∏á‡∏ô‡∏±‡πâ‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏Ñ‡∏¥‡∏î‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á ‡πÄ‡∏ä‡πà‡∏ô config ‡∏´‡∏£‡∏∑‡∏≠ constant ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">str</code> ‡∏™‡πà‡∏ß‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">String</code></p> <p>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å [[2024-05-29-basic-rust]] ‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏≤‡∏à‡∏≤‡∏Å <code class="language-plaintext highlighter-rouge">read_line</code> ‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏≠‡∏≤‡∏°‡∏≤‡∏ó‡∏≥ trim ‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏™‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏≤‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ <code class="language-plaintext highlighter-rouge">String</code></p>]]></content><author><name></name></author><category term="etc"/><category term="rust"/><summary type="html"><![CDATA[What's the difference between str and String]]></summary></entry><entry><title type="html">Basic Rust</title><link href="https://ilumin.github.io/blog/2024/basic-rust/" rel="alternate" type="text/html" title="Basic Rust"/><published>2024-05-29T00:00:00+00:00</published><updated>2024-05-29T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/basic-rust</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/basic-rust/"><![CDATA[<p>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Rust</p> <div class="language-rs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">use</span> <span class="nn">std</span><span class="p">::</span><span class="nn">io</span><span class="p">::</span><span class="n">stdin</span><span class="p">;</span>

<span class="k">fn</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nd">println!</span><span class="p">(</span><span class="s">"Hello, what's your name?"</span><span class="p">);</span>

    <span class="k">let</span> <span class="k">mut</span> <span class="n">your_name</span> <span class="o">=</span> <span class="nn">String</span><span class="p">::</span><span class="nf">new</span><span class="p">();</span>

    <span class="nf">stdin</span><span class="p">()</span>
        <span class="nf">.read_line</span><span class="p">(</span><span class="o">&amp;</span><span class="k">mut</span> <span class="n">your_name</span><span class="p">)</span>
        <span class="nf">.expect</span><span class="p">(</span><span class="s">"Failed to read line"</span><span class="p">);</span>

    <span class="nd">println!</span><span class="p">(</span><span class="s">"Hello, {}"</span><span class="p">,</span> <span class="n">your_name</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div> <p>‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö input ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏¥‡πâ‡∏ô Hello, input</p> <p>‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á‡∏•‡πà‡∏∞</p> <div class="language-rs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">let</span> <span class="k">mut</span> <span class="n">your_name</span> <span class="o">=</span> <span class="nn">String</span><span class="p">::</span><span class="nf">new</span><span class="p">();</span>
</code></pre></div></div> <ul> <li>‡πÇ‡∏î‡∏¢‡∏õ‡∏Å‡∏ï‡∏¥‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡∏≠‡∏á Rust ‡πÄ‡∏õ‡πá‡∏ô immutable ‡∏´‡∏£‡∏∑‡∏≠ ‡πÑ‡∏°‡πà‡∏¢‡∏≠‡∏°‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li> <li>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° <code class="language-plaintext highlighter-rouge">mut</code> ‡πÑ‡∏õ</li> </ul> <div class="language-rs highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">stdin</span><span class="p">()</span>
    <span class="nf">.read_line</span><span class="p">(</span><span class="o">&amp;</span><span class="k">mut</span> <span class="n">your_name</span><span class="p">)</span>
    <span class="nf">.expect</span><span class="p">(</span><span class="s">"Failed to read line"</span><span class="p">);</span>
</code></pre></div></div> <ul> <li>‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏î‡∏≤‡πÑ‡∏î‡πâ <code class="language-plaintext highlighter-rouge">read_line()</code> ‡∏Ñ‡∏∑‡∏≠‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö input ‡∏°‡∏≤‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£</li> <li>‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ mutable ‡πÉ‡∏ô Rust ‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ <code class="language-plaintext highlighter-rouge">your_name = xxx</code> ‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô function ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ borrow ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏á‡πà‡∏≤‡∏¢‡πÜ‡∏Ñ‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡∏≤ reference ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô <ul> <li>‡∏ã‡∏∂‡πà‡∏á‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô mutable ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ <code class="language-plaintext highlighter-rouge">function(&amp;mut your_name)</code></li> <li>‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏∞ read ‡∏Å‡πá‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ borrow ‡∏î‡πâ‡∏ß‡∏¢ ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ <code class="language-plaintext highlighter-rouge">function(&amp;your_name)</code></li> </ul> </li> </ul>]]></content><author><name></name></author><category term="etc"/><category term="rust"/><summary type="html"><![CDATA[Assume that this is my first time with Rust]]></summary></entry><entry><title type="html">ARC114 - Analyze Speech &amp;amp; Language with Google APIs</title><link href="https://ilumin.github.io/blog/2024/ARC114/" rel="alternate" type="text/html" title="ARC114 - Analyze Speech &amp;amp; Language with Google APIs"/><published>2024-05-27T00:00:00+00:00</published><updated>2024-05-27T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/ARC114</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/ARC114/"><![CDATA[<h1 id="arc114-analyze-speech--language-with-google-apis-challenge-lab">ARC114: Analyze Speech &amp; Language with Google APIs: Challenge Lab</h1> <h2 id="setup">Setup</h2> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">export </span><span class="nv">PROJECT_ID</span><span class="o">=</span><span class="si">$(</span>gcloud config get-value core/project<span class="si">)</span>
</code></pre></div></div> <h2 id="task-1-create-an-api-key">Task 1: Create an API key</h2> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gcloud alpha services api-keys create <span class="nt">--display-name</span><span class="o">=</span><span class="s2">"lumin"</span>
<span class="nb">export </span><span class="nv">KEY_NAME</span><span class="o">=</span><span class="si">$(</span>gcloud alpha services api-keys list <span class="nt">--format</span><span class="o">=</span><span class="s2">"value(name)"</span> <span class="nt">--filter</span> <span class="s2">"displayName=lumin"</span><span class="si">)</span>
<span class="nb">export </span><span class="nv">API_KEY</span><span class="o">=</span><span class="si">$(</span>gcloud alpha services api-keys get-key-string <span class="nv">$KEY_NAME</span> <span class="nt">--format</span><span class="o">=</span><span class="s2">"value(keyString)"</span><span class="si">)</span>
</code></pre></div></div> <h2 id="task-2-make-an-entity-analysis-request-and-call-the-natural-language-api">Task 2: Make an entity analysis request and call the Natural Language API</h2> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&gt;</span> nl_request.json <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
{
  "document":{
    "type":"PLAIN_TEXT",
    "content":"With approximately 8.2 million people residing in Boston, the capital city of Massachusetts is one of the largest in the United States."
  },
  "encodingType":"UTF8"
}
</span><span class="no">EOF

</span>curl <span class="s2">"https://language.googleapis.com/v1/documents:analyzeEntities?key=</span><span class="k">${</span><span class="nv">API_KEY</span><span class="k">}</span><span class="s2">"</span> <span class="se">\</span>
  <span class="nt">-s</span> <span class="nt">-X</span> POST <span class="nt">-H</span> <span class="s2">"Content-Type: application/json"</span> <span class="nt">--data-binary</span> @nl_request.json <span class="o">&gt;</span> nl_response.json
</code></pre></div></div> <h2 id="task-3-create-a-speech-analysis-request-and-call-the-speech-api">Task 3. Create a speech analysis request and call the Speech API</h2> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&gt;</span> speech_request.json <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
{
  "config": {
      "encoding":"FLAC",
      "languageCode": "en-US"
  },
  "audio": {
      "uri":"gs://cloud-samples-tests/speech/brooklyn.flac"
  }
}
</span><span class="no">EOF

</span>curl <span class="nt">-s</span> <span class="nt">-X</span> POST <span class="nt">-H</span> <span class="s2">"Content-Type: application/json"</span> <span class="nt">--data-binary</span> @speech_request.json <span class="se">\</span>
<span class="s2">"https://speech.googleapis.com/v1/speech:recognize?key=</span><span class="k">${</span><span class="nv">API_KEY</span><span class="k">}</span><span class="s2">"</span> <span class="o">&gt;</span> speech_response.json
</code></pre></div></div> <h2 id="task-4-analyze-sentiment-with-the-natural-language-api">Task 4. Analyze sentiment with the Natural Language API</h2> <p>Update <code class="language-plaintext highlighter-rouge">def analyze()</code></p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> <span class="o">&gt;</span> sentiment_analysis.py <span class="o">&lt;&lt;</span><span class="no">EOF</span><span class="sh">
import argparse

from google.cloud import language_v1

def print_result(annotations):
    score = annotations.document_sentiment.score
    magnitude = annotations.document_sentiment.magnitude

    for index, sentence in enumerate(annotations.sentences):
        sentence_sentiment = sentence.sentiment.score
        print(
            "Sentence {} has a sentiment score of {}".format(index, sentence_sentiment)
        )

    print(
        "Overall Sentiment: score of {} with magnitude of {}".format(score, magnitude)
    )
    return 0

def analyze(movie_review_filename):
    """Run a sentiment analysis request on text within a passed filename."""
    client = language_v1.LanguageServiceClient()

    with open(movie_review_filename) as review_file:
        content = review_file.read()

    document = language_v1.Document(
        content=content, type_=language_v1.Document.Type.PLAIN_TEXT
    )
    annotations = client.analyze_sentiment(request={"document": document})

    print_result(annotations)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        description=__doc__, formatter_class=argparse.RawDescriptionHelpFormatter
    )
    parser.add_argument(
        "movie_review_filename",
        help="The filename of the movie review you'd like to analyze.",
    )
    args = parser.parse_args()

    analyze(args.movie_review_filename)
</span><span class="no">EOF
</span></code></pre></div></div> <p>Then</p> <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># copy file</span>
gsutil <span class="nb">cp </span>gs://cloud-samples-tests/natural-language/sentiment-samples.tgz <span class="nb">.</span>
<span class="nb">gunzip </span>sentiment-samples.tgz
<span class="nb">tar</span> <span class="nt">-xvf</span> sentiment-samples.tar

<span class="c"># Run</span>
python3 sentiment_analysis.py reviews/bladerunner-pos.txt
</code></pre></div></div>]]></content><author><name></name></author><category term="gcp-labs"/><category term="gcp,"/><category term="chaiyo2024"/><summary type="html"><![CDATA[ARC114]]></summary></entry><entry><title type="html">code boundaries</title><link href="https://ilumin.github.io/blog/2024/code-boundaries/" rel="alternate" type="text/html" title="code boundaries"/><published>2024-05-16T00:00:00+00:00</published><updated>2024-05-16T00:00:00+00:00</updated><id>https://ilumin.github.io/blog/2024/code-boundaries</id><content type="html" xml:base="https://ilumin.github.io/blog/2024/code-boundaries/"><![CDATA[<div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <iframe src="https://www.youtube.com/embed/DNIDBbjqFCo" class="img-fluid rounded z-depth-1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="" width="auto" height="auto"/> </figure> </div> </div> <p>‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏•‡πâ‡∏ß‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ô‡∏≠‡∏Å‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡∏•‡πâ‡∏ß‡∏ô‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡πÅ‡∏•‡∏∞‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏à‡πá‡∏ö‡∏õ‡∏ß‡∏î ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô friend zone ‡∏ô‡∏±‡πà‡∏ô‡πÅ‡∏´‡∏•‡∏∞</p> <p>‡πÅ‡∏ï‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡πÅ‡∏•‡πâ‡∏ß ‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ô‡∏¥‡∏¢‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï (boundaries) ‡πÑ‡∏ß‡πâ‡πÄ‡∏¢‡∏≠‡∏∞‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡πÉ‡∏ô clean code ‡πÄ‡∏Ñ‡πâ‡∏≤‡∏à‡∏∞‡πÅ‡∏ö‡πà‡∏á‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô</p> <ul> <li>external boundary: code ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô external API, package ‡∏≠‡∏∑‡πà‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏°‡πâ‡πÅ‡∏ï‡πà code ‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡∏°‡∏≠‡∏∑‡πà‡∏ô‡∏°‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô</li> <li>internal boundary: ‡πÅ‡∏ô‡∏Å‡∏≥ ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡∏°‡πÄ‡∏£‡∏≤‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÄ‡∏≠‡∏á</li> </ul> <p>‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÄ‡∏ô‡∏µ‡πà‡∏¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö code ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡πÉ‡∏´‡πâ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡πÑ‡∏õ‡∏£‡∏π‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏≠‡∏≤‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡∏≠‡∏á external boundary ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏ô internal boundary ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏°‡∏±‡∏ô‡πÄ‡∏ó‡∏™‡∏¢‡∏≤‡∏Å ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏¢‡∏≤‡∏Å ‡πÅ‡∏•‡∏∞‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î dependency ‡∏Å‡∏±‡∏ö external ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡πâ‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î bug ‡∏à‡∏≤‡∏Å external boundary (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ú‡∏¥‡∏î‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏Ñ‡∏∑‡∏≠ ‡πÑ‡∏ß‡πâ‡πÉ‡∏à‡πÄ‡∏Ñ‡πâ‡∏≤)</p> <p>‡πÉ‡∏ô‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠ Learning Domain-Driven Design ‡∏°‡∏µ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô</p> <ul> <li>logical boundary: ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Ç‡∏≠‡∏á code ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ module</li> <li>physical boundary: ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏Ç‡∏≠‡∏á code ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ service (service ‡∏à‡∏£‡∏¥‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô server, container)</li> </ul> <p>‡πÄ‡∏Ñ‡πâ‡∏≤‡πÅ‡∏ö‡πà‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÅ‡∏ö‡πà‡∏á‡∏á‡∏≤‡∏ô ‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞ bounded context ‡πÅ‡∏•‡∏∞ subdomain ‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡πÄ‡∏≠‡∏≤ code ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡∏•‡∏∞ boundary ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡∏°‡∏±‡∏Å‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ã‡∏±‡∏ö‡∏ã‡πâ‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏≥‡∏ö‡∏≤‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤</p> <hr/> <p>‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ‡πÅ‡∏•‡πâ‡∏ß code ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ï‡πâ Git repository ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏°‡∏µ code ‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Git submodule ‡∏ó‡∏µ‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏°‡πÄ‡∏Ñ‡πâ‡∏≤‡∏ó‡∏≥‡∏•‡πà‡∏∞</p> <p>‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ ‡πÄ‡∏£‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ code ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Git submodule ‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡∏•‡∏∞ physical boundary ‡∏Å‡∏±‡∏ô ‡∏Å‡πá‡∏°‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏ô‡∏•‡∏∞ Git repository ‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢‡∏ô‡πà‡∏∞ ‡∏à‡∏∞‡∏°‡∏≤‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô logical boundary ‡πÑ‡∏î‡πâ‡∏¢‡∏±‡∏á‡∏á‡∏±‡∏¢‡∏Å‡∏±‡∏ô</p> <p>‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏Å‡πá‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡∏° ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡∏≠‡∏á code ‡πÉ‡∏ô Git submodule ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡πÇ‡∏î‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏µ‡∏Å‡∏ó‡∏µ‡∏°‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡∏ï‡∏±‡∏ß</p> <p>‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∑‡πà‡∏ô‡∏ô‡∏≠‡∏Å‡πÄ‡∏´‡∏ô‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥ Git submodule ‡∏Ñ‡∏∑‡∏≠</p> <ul> <li>monorepo: ‡πÄ‡∏≠‡∏≤ code ‡∏°‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô repository ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡πÄ‡∏•‡∏¢ ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ monorepo ‡∏ä‡πà‡∏ß‡∏¢‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏≤ code ‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≤‡∏° package ‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô duplicate code ‡∏°‡∏≤‡∏Å‡∏ô‡∏±‡∏Å</li> <li>publish package: ‡∏Å‡πá publish ‡πÄ‡∏õ‡πá‡∏ô package ‡πÑ‡∏õ‡πÉ‡∏´‡πâ‡∏ó‡∏µ‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏¢‡∏™‡∏¥ ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏à‡∏∞‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢</li> </ul> <hr/> <p>‡∏ñ‡πâ‡∏≤‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏ô‡∏≠‡∏Å‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡∏°‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏™‡∏°‡∏´‡∏ß‡∏±‡∏á ‚Ä¶ ‡∏Å‡πá‡∏≠‡∏¢‡∏π‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏∞</p>]]></content><author><name></name></author><category term="solution-architecture"/><category term="ddd,"/><category term="clean"/><category term="code"/><summary type="html"><![CDATA[code boundaries ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ friend zone]]></summary></entry></feed>